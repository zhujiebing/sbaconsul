2019-08-06 21:46:49,983 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 21:46:50,070 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 21:46:50,073 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:50,074 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:50,074 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:50,075 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:46:50,076 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:50,105 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a00f5393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 21:46:50,136 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 21:46:50,174 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 21:46:50,177 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2019-08-06 21:46:50,678 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: application-1
2019-08-06 21:46:50,679 [main] INFO  [com.cvnavi.monitor.MonitorApplication] SpringApplication.java:650 - The following profiles are active: secure
2019-08-06 21:46:51,762 [main] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:131 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-08-06 21:46:52,043 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=02831a18-1d80-3dce-9871-f2c47ff1331e
2019-08-06 21:46:52,048 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 21:46:52,079 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 21:46:52,079 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:46:52,080 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:46:52,080 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:52,080 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:52,080 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:46:52,080 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.yml] (document #2) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:52,080 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.yml] (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:52,081 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:52,081 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource defaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:46:52,131 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 21:46:52,263 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a00f5393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 21:46:52,717 [main] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2019-08-06 21:46:52,778 [main] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2019-08-06 21:46:52,779 [main] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:283 - Root WebApplicationContext: initialization completed in 2091 ms
2019-08-06 21:46:52,900 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2019-08-06 21:46:52,900 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-06 21:46:52,916 [main] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@63e5b8aa
2019-08-06 21:46:52,988 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 21:46:52,988 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2019-08-06 21:46:54,410 [main] INFO  [o.s.b.a.endpoint.web.ServletEndpointRegistrar] ServletEndpointRegistrar.java:74 - Registered '/foo/jolokia' to jolokia-actuator-endpoint
2019-08-06 21:46:54,558 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2019-08-06 21:46:54,559 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-06 21:46:54,735 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-06 21:46:54,901 [main] WARN  [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] ThymeleafAutoConfiguration.java:105 - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2019-08-06 21:46:55,853 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:171 - Initializing ExecutorService 'catalogWatchTaskScheduler'
2019-08-06 21:46:56,459 [main] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4bb9f7d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c9e3d01, org.springframework.security.web.header.HeaderWriterFilter@22002459, org.springframework.security.web.csrf.CsrfFilter@6fcc0a1, org.springframework.security.web.authentication.logout.LogoutFilter@6dde1bf5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3265995e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@30665461, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a2d66e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ac7856f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@673a9db4, org.springframework.security.web.session.SessionManagementFilter@21e702b8, org.springframework.security.web.access.ExceptionTranslationFilter@13137835, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4bca8eaf]
2019-08-06 21:46:56,489 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 21 endpoint(s) beneath base path '/foo'
2019-08-06 21:46:56,774 [main] INFO  [org.xnio] Xnio.java:104 - XNIO version 3.3.8.Final
2019-08-06 21:46:56,793 [main] INFO  [org.xnio.nio] NioXnio.java:55 - XNIO NIO Implementation Version 3.3.8.Final
2019-08-06 21:46:56,864 [main] INFO  [o.s.b.w.embedded.undertow.UndertowServletWebServer] UndertowServletWebServer.java:144 - Undertow started on port(s) 18007 (http) with context path ''
2019-08-06 21:46:56,877 [main] INFO  [o.s.c.consul.serviceregistry.ConsulServiceRegistry] ConsulServiceRegistry.java:65 - Registering service with consul: NewService{id='monitor-18007', name='monitor', tags=[management.context-path=/foo, health.path=/ping, user.name=user, user.password=password, secure=false], address='DESKTOP-6CSCCCJ.mshome.net', meta=null, port=18007, enableTagOverride=null, check=Check{script='null', interval='10s', ttl='null', http='http://DESKTOP-6CSCCCJ.mshome.net:18007/actuator/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2019-08-06 21:46:56,930 [main] INFO  [com.cvnavi.monitor.MonitorApplication] StartupInfoLogger.java:59 - Started MonitorApplication in 8.478 seconds (JVM running for 10.92)
2019-08-06 21:46:57,478 [RMI TCP Connection(1)-10.0.75.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-06 21:46:57,478 [RMI TCP Connection(1)-10.0.75.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:524 - Initializing Servlet 'dispatcherServlet'
2019-08-06 21:46:57,491 [RMI TCP Connection(1)-10.0.75.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:546 - Completed initialization in 13 ms
2019-08-06 21:46:57,835 [catalogWatchTaskScheduler-1] WARN  [d.c.b.a.s.d.e.SnapshottingInstanceRepository] SnapshottingInstanceRepository.java:103 - Error while updating the snapshot with event InstanceRegisteredEvent(super=InstanceEvent(instance=37a62b5edb3e, version=0, timestamp=2019-08-06T13:46:56.909Z, type=REGISTERED), registration=Registration(name=config2, managementUrl=http://172.31.26.81:18005/actuator, healthUrl=http://172.31.26.81:18005/actuator/health, serviceUrl=http://172.31.26.81:18005/, source=discovery))
java.lang.IllegalArgumentException: Event 0 must be greater or equal to 1
	at org.springframework.util.Assert.isTrue(Assert.java:136)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:215)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:209)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.lambda$updateSnapshot$5(SnapshottingInstanceRepository.java:100)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$787/705299599.apply(Unknown Source)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1877)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.updateSnapshot(SnapshottingInstanceRepository.java:98)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$621/1061838943.accept(Unknown Source)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:130)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:176)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:474)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:253)
	at reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:277)
	at reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:310)
	at reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:386)
	at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:618)
	at reactor.core.publisher.FluxCreate$SerializedSink.drainLoop(FluxCreate.java:248)
	at reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:168)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher$$Lambda$786/688980962.accept(Unknown Source)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore$$Lambda$780/1300380007.run(Unknown Source)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:73)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:32)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:160)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2071)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1879)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1753)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.Operators.complete(Operators.java:131)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:86)
	at reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:564)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:635)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:266)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:208)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:82)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:135)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:52)
	at reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:109)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:3954)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3842)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3809)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3781)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:111)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch.catalogServicesWatch(ConsulCatalogWatch.java:142)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch$$Lambda$752/604047477.run(Unknown Source)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-08-06 21:46:57,849 [catalogWatchTaskScheduler-1] WARN  [d.c.b.a.s.d.e.SnapshottingInstanceRepository] SnapshottingInstanceRepository.java:103 - Error while updating the snapshot with event InstanceRegisteredEvent(super=InstanceEvent(instance=2204181f7f36, version=0, timestamp=2019-08-06T13:46:56.914Z, type=REGISTERED), registration=Registration(name=monitor, managementUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/foo, healthUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/foo/ping, serviceUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/, source=discovery))
java.lang.IllegalArgumentException: Event 0 must be greater or equal to 1
	at org.springframework.util.Assert.isTrue(Assert.java:136)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:215)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:209)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.lambda$updateSnapshot$5(SnapshottingInstanceRepository.java:100)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$787/705299599.apply(Unknown Source)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1877)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.updateSnapshot(SnapshottingInstanceRepository.java:98)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$621/1061838943.accept(Unknown Source)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:130)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:176)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:474)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:253)
	at reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:277)
	at reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:310)
	at reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:386)
	at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:618)
	at reactor.core.publisher.FluxCreate$SerializedSink.drainLoop(FluxCreate.java:248)
	at reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:168)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher$$Lambda$786/688980962.accept(Unknown Source)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore$$Lambda$780/1300380007.run(Unknown Source)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:73)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:32)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:160)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2071)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1879)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1753)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.Operators.complete(Operators.java:131)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:86)
	at reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:564)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:635)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:266)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:208)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:82)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:135)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:52)
	at reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:109)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:3954)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3842)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3809)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3781)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:111)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch.catalogServicesWatch(ConsulCatalogWatch.java:142)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch$$Lambda$752/604047477.run(Unknown Source)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-08-06 21:46:57,863 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '2204181f7f36' missing in DiscoveryClient services and will be removed.
2019-08-06 21:49:06,556 [Thread-21] INFO  [o.s.c.consul.serviceregistry.ConsulServiceRegistry] ConsulServiceRegistry.java:93 - Deregistering service with consul: monitor-18007
2019-08-06 21:49:06,582 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '2204181f7f36' missing in DiscoveryClient services and will be removed.
2019-08-06 21:49:06,593 [Thread-21] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:208 - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2019-08-06 21:49:06,596 [Thread-21] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:208 - Shutting down ExecutorService 'applicationTaskExecutor'
2019-08-06 21:49:06,604 [Thread-21] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2019-08-06 21:49:19,229 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 21:49:19,435 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 21:49:19,447 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:19,448 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:19,451 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:19,453 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:49:19,454 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:19,483 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$169d7c63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 21:49:19,510 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 21:49:19,547 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 21:49:19,549 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2019-08-06 21:49:20,081 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: application-1
2019-08-06 21:49:20,082 [main] INFO  [com.cvnavi.monitor.MonitorApplication] SpringApplication.java:650 - The following profiles are active: secure
2019-08-06 21:49:21,178 [main] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:131 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-08-06 21:49:21,208 [main] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:131 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2019-08-06 21:49:21,446 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=8e0f7f6f-18c5-3e83-942a-9bb2bb284f32
2019-08-06 21:49:21,452 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 21:49:21,474 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 21:49:21,474 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:49:21,475 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:49:21,475 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:21,476 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:21,476 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:49:21,476 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.yml] (document #2) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:21,477 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.yml] (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:21,477 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:21,477 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource defaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:49:21,489 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 21:49:21,751 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$169d7c63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 21:49:22,040 [main] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2019-08-06 21:49:22,081 [main] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2019-08-06 21:49:22,081 [main] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:283 - Root WebApplicationContext: initialization completed in 1979 ms
2019-08-06 21:49:22,326 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2019-08-06 21:49:22,326 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-06 21:49:22,340 [main] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@448cdb47
2019-08-06 21:49:22,373 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 21:49:22,374 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2019-08-06 21:49:23,582 [main] INFO  [o.s.b.a.endpoint.web.ServletEndpointRegistrar] ServletEndpointRegistrar.java:74 - Registered '/foo/jolokia' to jolokia-actuator-endpoint
2019-08-06 21:49:23,583 [main] INFO  [o.s.b.a.endpoint.web.ServletEndpointRegistrar] ServletEndpointRegistrar.java:74 - Registered '/foo/hystrix.stream' to hystrix.stream-actuator-endpoint
2019-08-06 21:49:23,880 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2019-08-06 21:49:23,881 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-06 21:49:24,089 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-06 21:49:24,270 [main] WARN  [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] ThymeleafAutoConfiguration.java:105 - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2019-08-06 21:49:25,073 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:171 - Initializing ExecutorService 'catalogWatchTaskScheduler'
2019-08-06 21:49:25,700 [main] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c335b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@73852720, org.springframework.security.web.header.HeaderWriterFilter@1b9c716f, org.springframework.security.web.csrf.CsrfFilter@7cbede2b, org.springframework.security.web.authentication.logout.LogoutFilter@42db955e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@228958a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2d3eb1ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ae0a26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c60f096, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75c8d8e7, org.springframework.security.web.session.SessionManagementFilter@33f2cf82, org.springframework.security.web.access.ExceptionTranslationFilter@3601549f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@155c7eae]
2019-08-06 21:49:25,734 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 22 endpoint(s) beneath base path '/foo'
2019-08-06 21:49:26,029 [main] INFO  [org.xnio] Xnio.java:104 - XNIO version 3.3.8.Final
2019-08-06 21:49:26,048 [main] INFO  [org.xnio.nio] NioXnio.java:55 - XNIO NIO Implementation Version 3.3.8.Final
2019-08-06 21:49:26,144 [main] INFO  [o.s.b.w.embedded.undertow.UndertowServletWebServer] UndertowServletWebServer.java:144 - Undertow started on port(s) 18007 (http) with context path ''
2019-08-06 21:49:26,156 [main] INFO  [o.s.c.consul.serviceregistry.ConsulServiceRegistry] ConsulServiceRegistry.java:65 - Registering service with consul: NewService{id='monitor-18007', name='monitor', tags=[management.context-path=/foo, health.path=/ping, user.name=user, user.password=password, secure=false], address='DESKTOP-6CSCCCJ.mshome.net', meta=null, port=18007, enableTagOverride=null, check=Check{script='null', interval='10s', ttl='null', http='http://DESKTOP-6CSCCCJ.mshome.net:18007/actuator/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2019-08-06 21:49:26,197 [main] INFO  [com.cvnavi.monitor.MonitorApplication] StartupInfoLogger.java:59 - Started MonitorApplication in 8.744 seconds (JVM running for 11.309)
2019-08-06 21:49:26,541 [RMI TCP Connection(2)-10.0.75.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-06 21:49:26,541 [RMI TCP Connection(2)-10.0.75.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:524 - Initializing Servlet 'dispatcherServlet'
2019-08-06 21:49:26,555 [RMI TCP Connection(2)-10.0.75.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:546 - Completed initialization in 13 ms
2019-08-06 21:49:26,720 [catalogWatchTaskScheduler-1] WARN  [d.c.b.a.s.d.e.SnapshottingInstanceRepository] SnapshottingInstanceRepository.java:103 - Error while updating the snapshot with event InstanceRegisteredEvent(super=InstanceEvent(instance=37a62b5edb3e, version=0, timestamp=2019-08-06T13:49:26.183Z, type=REGISTERED), registration=Registration(name=config2, managementUrl=http://172.31.26.81:18005/actuator, healthUrl=http://172.31.26.81:18005/actuator/health, serviceUrl=http://172.31.26.81:18005/, source=discovery))
java.lang.IllegalArgumentException: Event 0 must be greater or equal to 1
	at org.springframework.util.Assert.isTrue(Assert.java:136)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:215)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:209)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.lambda$updateSnapshot$5(SnapshottingInstanceRepository.java:100)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$794/1174764632.apply(Unknown Source)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1877)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.updateSnapshot(SnapshottingInstanceRepository.java:98)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$498/894658400.accept(Unknown Source)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:130)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:176)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:474)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:253)
	at reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:277)
	at reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:310)
	at reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:386)
	at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:618)
	at reactor.core.publisher.FluxCreate$SerializedSink.drainLoop(FluxCreate.java:248)
	at reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:168)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher$$Lambda$793/595987107.accept(Unknown Source)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore$$Lambda$787/114778570.run(Unknown Source)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:73)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:32)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:160)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2071)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1879)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1753)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.Operators.complete(Operators.java:131)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:86)
	at reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:564)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:635)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:266)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:208)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:82)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:135)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:52)
	at reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:109)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:3954)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3842)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3809)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3781)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:111)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch.catalogServicesWatch(ConsulCatalogWatch.java:142)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch$$Lambda$759/1101786725.run(Unknown Source)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-08-06 21:49:26,728 [catalogWatchTaskScheduler-1] WARN  [d.c.b.a.s.d.e.SnapshottingInstanceRepository] SnapshottingInstanceRepository.java:103 - Error while updating the snapshot with event InstanceRegisteredEvent(super=InstanceEvent(instance=2204181f7f36, version=0, timestamp=2019-08-06T13:49:26.191Z, type=REGISTERED), registration=Registration(name=monitor, managementUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/foo, healthUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/foo/ping, serviceUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/, source=discovery))
java.lang.IllegalArgumentException: Event 0 must be greater or equal to 1
	at org.springframework.util.Assert.isTrue(Assert.java:136)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:215)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:209)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.lambda$updateSnapshot$5(SnapshottingInstanceRepository.java:100)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$794/1174764632.apply(Unknown Source)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1877)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.updateSnapshot(SnapshottingInstanceRepository.java:98)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$498/894658400.accept(Unknown Source)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:130)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:176)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:474)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:253)
	at reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:277)
	at reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:310)
	at reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:386)
	at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:618)
	at reactor.core.publisher.FluxCreate$SerializedSink.drainLoop(FluxCreate.java:248)
	at reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:168)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher$$Lambda$793/595987107.accept(Unknown Source)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore$$Lambda$787/114778570.run(Unknown Source)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:73)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:32)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:160)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2071)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1879)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1753)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.Operators.complete(Operators.java:131)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:86)
	at reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:564)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:635)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:266)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:208)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:82)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:135)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:52)
	at reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:109)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:3954)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3842)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3809)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3781)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:111)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch.catalogServicesWatch(ConsulCatalogWatch.java:142)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch$$Lambda$759/1101786725.run(Unknown Source)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-08-06 21:49:26,743 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '2204181f7f36' missing in DiscoveryClient services and will be removed.
2019-08-06 21:49:27,741 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance config (25028f91963e) is UP
2019-08-06 21:49:28,117 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance config2 (37a62b5edb3e) is UP
2019-08-06 21:49:28,386 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance monitor (2204181f7f36) is UP
2019-08-06 21:50:36,774 [Thread-20] INFO  [o.s.c.consul.serviceregistry.ConsulServiceRegistry] ConsulServiceRegistry.java:93 - Deregistering service with consul: monitor-18007
2019-08-06 21:50:37,104 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '2204181f7f36' missing in DiscoveryClient services and will be removed.
2019-08-06 21:50:37,115 [Thread-20] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:208 - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2019-08-06 21:50:37,130 [Thread-20] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:208 - Shutting down ExecutorService 'applicationTaskExecutor'
2019-08-06 21:50:37,152 [Thread-20] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2019-08-06 21:50:44,919 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 21:50:44,984 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 21:50:44,988 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:44,988 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:44,988 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:44,989 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:50:44,990 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:45,015 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef6f92b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 21:50:45,040 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 21:50:45,074 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 21:50:45,076 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2019-08-06 21:50:45,548 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: application-1
2019-08-06 21:50:45,549 [main] INFO  [com.cvnavi.monitor.MonitorApplication] SpringApplication.java:650 - The following profiles are active: secure
2019-08-06 21:50:46,632 [main] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:131 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-08-06 21:50:46,662 [main] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:131 - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2019-08-06 21:50:46,897 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=8e0f7f6f-18c5-3e83-942a-9bb2bb284f32
2019-08-06 21:50:46,904 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 21:50:46,924 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 21:50:46,924 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:50:46,924 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:50:46,925 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:46,925 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:46,925 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 21:50:46,925 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.yml] (document #2) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:46,925 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.yml] (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:46,926 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:46,926 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource defaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 21:50:46,943 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 21:50:47,224 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef6f92b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 21:50:47,539 [main] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2019-08-06 21:50:47,576 [main] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2019-08-06 21:50:47,577 [main] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:283 - Root WebApplicationContext: initialization completed in 2010 ms
2019-08-06 21:50:47,839 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2019-08-06 21:50:47,839 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-06 21:50:47,856 [main] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@21f9c6ea
2019-08-06 21:50:47,908 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 21:50:47,908 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2019-08-06 21:50:49,087 [main] INFO  [o.s.b.a.endpoint.web.ServletEndpointRegistrar] ServletEndpointRegistrar.java:74 - Registered '/foo/jolokia' to jolokia-actuator-endpoint
2019-08-06 21:50:49,088 [main] INFO  [o.s.b.a.endpoint.web.ServletEndpointRegistrar] ServletEndpointRegistrar.java:74 - Registered '/foo/hystrix.stream' to hystrix.stream-actuator-endpoint
2019-08-06 21:50:49,350 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2019-08-06 21:50:49,350 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-06 21:50:49,571 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-06 21:50:49,719 [main] WARN  [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] ThymeleafAutoConfiguration.java:105 - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2019-08-06 21:50:50,398 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:171 - Initializing ExecutorService 'catalogWatchTaskScheduler'
2019-08-06 21:50:51,064 [main] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b1a1a37, org.springframework.security.web.context.SecurityContextPersistenceFilter@58a7a58d, org.springframework.security.web.header.HeaderWriterFilter@63f2d024, org.springframework.security.web.csrf.CsrfFilter@191b44ca, org.springframework.security.web.authentication.logout.LogoutFilter@1de6dc80, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5981f2c6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6abd8bcd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c9975a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5521407f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d90764a, org.springframework.security.web.session.SessionManagementFilter@405223e4, org.springframework.security.web.access.ExceptionTranslationFilter@43df1377, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5454be]
2019-08-06 21:50:51,099 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 22 endpoint(s) beneath base path '/foo'
2019-08-06 21:50:51,399 [main] INFO  [org.xnio] Xnio.java:104 - XNIO version 3.3.8.Final
2019-08-06 21:50:51,418 [main] INFO  [org.xnio.nio] NioXnio.java:55 - XNIO NIO Implementation Version 3.3.8.Final
2019-08-06 21:50:51,508 [main] INFO  [o.s.b.w.embedded.undertow.UndertowServletWebServer] UndertowServletWebServer.java:144 - Undertow started on port(s) 18007 (http) with context path ''
2019-08-06 21:50:51,522 [main] INFO  [o.s.c.consul.serviceregistry.ConsulServiceRegistry] ConsulServiceRegistry.java:65 - Registering service with consul: NewService{id='monitor-18007', name='monitor', tags=[management.context-path=/foo, health.path=/ping, user.name=user, user.password=password, secure=false], address='DESKTOP-6CSCCCJ.mshome.net', meta=null, port=18007, enableTagOverride=null, check=Check{script='null', interval='10s', ttl='null', http='http://DESKTOP-6CSCCCJ.mshome.net:18007/actuator/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2019-08-06 21:50:51,558 [main] INFO  [com.cvnavi.monitor.MonitorApplication] StartupInfoLogger.java:59 - Started MonitorApplication in 8.037 seconds (JVM running for 9.932)
2019-08-06 21:50:52,040 [catalogWatchTaskScheduler-1] WARN  [d.c.b.a.s.d.e.SnapshottingInstanceRepository] SnapshottingInstanceRepository.java:103 - Error while updating the snapshot with event InstanceRegisteredEvent(super=InstanceEvent(instance=37a62b5edb3e, version=0, timestamp=2019-08-06T13:50:51.548Z, type=REGISTERED), registration=Registration(name=config2, managementUrl=http://172.31.26.81:18005/actuator, healthUrl=http://172.31.26.81:18005/actuator/health, serviceUrl=http://172.31.26.81:18005/, source=discovery))
java.lang.IllegalArgumentException: Event 0 must be greater or equal to 1
	at org.springframework.util.Assert.isTrue(Assert.java:136)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:215)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:209)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.lambda$updateSnapshot$5(SnapshottingInstanceRepository.java:100)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$793/1717332708.apply(Unknown Source)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1877)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.updateSnapshot(SnapshottingInstanceRepository.java:98)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$498/1520947167.accept(Unknown Source)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:130)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:176)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:474)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:253)
	at reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:277)
	at reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:310)
	at reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:386)
	at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:618)
	at reactor.core.publisher.FluxCreate$SerializedSink.drainLoop(FluxCreate.java:248)
	at reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:168)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher$$Lambda$792/573320698.accept(Unknown Source)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore$$Lambda$786/2020860882.run(Unknown Source)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:73)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:32)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:160)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2071)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1879)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1753)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.Operators.complete(Operators.java:131)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:86)
	at reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:564)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:635)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:266)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:208)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:82)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:135)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:52)
	at reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:109)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:3954)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3842)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3809)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3781)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:111)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch.catalogServicesWatch(ConsulCatalogWatch.java:142)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch$$Lambda$758/400280074.run(Unknown Source)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-08-06 21:50:52,051 [catalogWatchTaskScheduler-1] WARN  [d.c.b.a.s.d.e.SnapshottingInstanceRepository] SnapshottingInstanceRepository.java:103 - Error while updating the snapshot with event InstanceRegisteredEvent(super=InstanceEvent(instance=2204181f7f36, version=0, timestamp=2019-08-06T13:50:51.551Z, type=REGISTERED), registration=Registration(name=monitor, managementUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/foo, healthUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/foo/ping, serviceUrl=http://DESKTOP-6CSCCCJ.mshome.net:18007/, source=discovery))
java.lang.IllegalArgumentException: Event 0 must be greater or equal to 1
	at org.springframework.util.Assert.isTrue(Assert.java:136)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:215)
	at de.codecentric.boot.admin.server.domain.entities.Instance.apply(Instance.java:209)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.lambda$updateSnapshot$5(SnapshottingInstanceRepository.java:100)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$793/1717332708.apply(Unknown Source)
	at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1877)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository.updateSnapshot(SnapshottingInstanceRepository.java:98)
	at de.codecentric.boot.admin.server.domain.entities.SnapshottingInstanceRepository$$Lambda$498/1520947167.accept(Unknown Source)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:130)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:176)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:474)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:253)
	at reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:277)
	at reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:310)
	at reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:386)
	at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:618)
	at reactor.core.publisher.FluxCreate$SerializedSink.drainLoop(FluxCreate.java:248)
	at reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:168)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher$$Lambda$792/573320698.accept(Unknown Source)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	at de.codecentric.boot.admin.server.eventstore.InMemoryEventStore$$Lambda$786/2020860882.run(Unknown Source)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:73)
	at reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:32)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:160)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2071)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1879)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1753)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.Operators.complete(Operators.java:131)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:86)
	at reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:564)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:635)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:266)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:208)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:82)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:135)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63)
	at reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:52)
	at reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:109)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3848)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:3954)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3842)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3809)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3781)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:111)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	at de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch.catalogServicesWatch(ConsulCatalogWatch.java:142)
	at org.springframework.cloud.consul.discovery.ConsulCatalogWatch$$Lambda$758/400280074.run(Unknown Source)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-08-06 21:50:52,065 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '2204181f7f36' missing in DiscoveryClient services and will be removed.
2019-08-06 21:50:52,200 [XNIO-1 task-1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-06 21:50:52,202 [XNIO-1 task-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:524 - Initializing Servlet 'dispatcherServlet'
2019-08-06 21:50:52,221 [XNIO-1 task-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:546 - Completed initialization in 18 ms
2019-08-06 21:50:52,965 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance 【config2】 (37a62b5edb3e) is UP
2019-08-06 21:50:53,042 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance 【config】 (25028f91963e) is UP
2019-08-06 21:50:53,500 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance 【monitor】 (2204181f7f36) is UP
2019-08-06 21:51:39,392 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '25028f91963e' missing in DiscoveryClient services and will be removed.
2019-08-06 21:51:40,890 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '37a62b5edb3e' missing in DiscoveryClient services and will be removed.
2019-08-06 21:51:55,918 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance 【config】 (25028f91963e) is UP
2019-08-06 21:51:59,870 [reactor-http-nio-4] INFO  [com.cvnavi.monitor.support.StatusChangeNotifier] StatusChangeNotifier.java:59 - Instance 【config2】 (37a62b5edb3e) is UP
2019-08-06 22:02:06,680 [catalogWatchTaskScheduler-1] INFO  [d.c.b.a.s.c.discovery.InstanceDiscoveryListener] InstanceDiscoveryListener.java:120 - Instance '25028f91963e' missing in DiscoveryClient services and will be removed.
2019-08-06 22:02:07,482 [Thread-21] INFO  [o.s.c.consul.serviceregistry.ConsulServiceRegistry] ConsulServiceRegistry.java:93 - Deregistering service with consul: monitor-18007
2019-08-06 22:02:07,581 [Thread-21] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:208 - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2019-08-06 22:02:07,585 [Thread-21] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:208 - Shutting down ExecutorService 'applicationTaskExecutor'
2019-08-06 22:02:07,603 [Thread-21] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2019-08-06 22:05:36,595 [main] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2019-08-06 22:05:36,679 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2019-08-06 22:05:36,681 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 22:05:36,682 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 22:05:36,682 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 22:05:36,684 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2019-08-06 22:05:36,684 [main] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2019-08-06 22:05:36,711 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ea76a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-06 22:05:36,741 [main] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2019-08-06 22:05:36,779 [main] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2019-08-06 22:05:36,781 [main] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
